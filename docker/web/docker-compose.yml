version: "3"
services:
    traefik:
        image: traefik:v2.0
        container_name: traefik
        environment:
          PUID: "${PUID}"
          PGID: "${PGID}"
          CF_API_EMAIL: "${CF_EMAIL}"
          CF_API_KEY: "${CF_API_KEY}"
        ports:
          - "80:80"
          - "443:443"
        volumes:
          - /etc/localtime:/etc/localtime:ro
          - /var/run/docker.sock:/var/run/docker.sock
          - "${APPDATA_WEB}/traefik/:/etc/traefik/"
        labels:
          traefik.enable: "true"
          traefik.http.routers.traefik.rule: "Host(`traefik.${DOMAIN}`)"
          traefik.http.routers.traefik.entrypoints: "web"
          traefik.http.routers.traefik.middlewares: "redirect@file"
          traefik.http.routers.traefik-secured.rule: "Host(`traefik.${DOMAIN}`)"
          traefik.http.routers.traefik-secured.entrypoints: "websecure"
          traefik.http.routers.traefik-secured.tls: "true"
          traefik.http.routers.traefik-secured.tls.options: "securetls@file"
          traefik.http.routers.traefik-secured.tls.certresolver: "le"
          traefik.http.routers.traefik-secured.middlewares: "secureHeaders@file,googleAuth@file"
          traefik.http.routers.traefik-secured.service: "api@internal"
          traefik.http.services.traefik-secured.loadbalancer.server.port: "8080"
        restart: always
        command:
          - "--global.sendanonymoususage=false"
          - "--providers.file.directory=/etc/traefik"
          - "--providers.docker=true"
          - "--providers.docker.exposedbydefault=false"
          - "--api=true"
          - "--log.level=DEBUG"
          - "--accesslog=true"
          - "--accesslog.filePath=/etc/traefik/access.log"
          - "--accesslog.format=json"
          - "--entrypoints.web.address=:80"
          - "--entrypoints.websecure.address=:443"
          - "--certificatesresolvers.le.acme.dnschallenge=true"
          - "--certificatesresolvers.le.acme.dnschallenge.provider=cloudflare"
          - "--certificatesresolvers.le.acme.email=${ACME_EMAIL}"
          - "--certificatesresolvers.le.acme.storage=/etc/traefik/acme.json"
          - "--certificatesResolvers.le.acme.dnsChallenge.resolvers=${NAMESERVER_1},${NAMESERVER_2}"
    oauth:
        image: thomseddon/traefik-forward-auth:latest
        container_name: oauth
        environment:
          PUID: "${PUID}"
          PGID: "${PGID}"
          AUTH_HOST: "oauth.${DOMAIN}"
          COOKIE_DOMAIN: "${DOMAIN}"
          SECRET: "${OAUTH_SECRET}"
          INSECURE_COOKIE: "false"
          CLIENT_ID: "${OAUTH_CLIENT_ID}"
          CLIENT_SECRET: "${OAUTH_CLIENT_SECRET}"
          WHITELIST: "${OAUTH_WHITELIST}"
        volumes:
          - /etc/localtime:/etc/localtime:ro
        labels:
          traefik.enable: "true"
          traefik.http.routers.oauth.rule: "Host(`oauth.${DOMAIN}`)"
          traefik.http.routers.oauth.entrypoints: "web"
          traefik.http.routers.oauth.middlewares: "redirect@file"
          traefik.http.routers.oauth-secured.rule: "Host(`oauth.${DOMAIN}`)"
          traefik.http.routers.oauth-secured.entrypoints: "websecure"
          traefik.http.routers.oauth-secured.tls: "true"
          traefik.http.routers.oauth-secured.tls.options: "securetls@file"
          traefik.http.routers.oauth-secured.tls.certresolver: "le"
          traefik.http.routers.oauth-secured.middlewares: "secureHeaders@file,googleAuth@file"
          traefik.http.services.oauth-secured.loadbalancer.server.port: "4181"
        restart: always
    portainer:
        image: portainer/portainer:latest
        container_name: portainer
        environment:
          PUID: "${PUID}"
          PGID: "${PGID}"
        volumes:
          - /etc/localtime:/etc/localtime:ro
          - /var/run/docker.sock:/var/run/docker.sock
          -  "${APPDATA_WEB}/portainer:/data"
        labels:
          traefik.enable: "true"
          traefik.http.routers.portainer.rule: "Host(`portainer.${DOMAIN}`)"
          traefik.http.routers.portainer.entrypoints: "web"
          traefik.http.routers.portainer.middlewares: "redirect@file"
          traefik.http.routers.portainer-secured.rule: "Host(`portainer.${DOMAIN}`)"
          traefik.http.routers.portainer-secured.entrypoints: "websecure"
          traefik.http.routers.portainer-secured.tls: "true"
          traefik.http.routers.portainer-secured.tls.options: "securetls@file"
          traefik.http.routers.portainer-secured.tls.certresolver: "le"
          traefik.http.routers.portainer-secured.middlewares: "secureHeaders@file,googleAuth@file"
          traefik.http.services.portainer-secured.loadbalancer.server.port: "9000"
        restart: always
    filebrowser:
        image: foundationkitty/gameservers:alpine-bash
        container_name: filebrowser
        environment:
          PUID: "${PUID}"
          PGID: "${PGID}"
        volumes:
          - /etc/localtime:/etc/localtime:ro
          - "${APPDATA_WEB}/filebrowser/filebrowser:/filebrowser"
          - "${APPDATA_WEB}/filebrowser/logs:/logs"
          - "${APPDATA}/:/srv"
          - "${APPDATA_WEB}/filebrowser/.filebrowser.json:/.filebrowser.json"
          - "${APPDATA_WEB}/filebrowser/database.db:/database.db"
        labels:
          traefik.enable: "true"
          traefik.http.routers.file.rule: "Host(`file.${DOMAIN}`)"
          traefik.http.routers.file.entrypoints: "web"
          traefik.http.routers.file.middlewares: "redirect@file"
          traefik.http.routers.file-secured.rule: "Host(`file.${DOMAIN}`)"
          traefik.http.routers.file-secured.entrypoints: "websecure"
          traefik.http.routers.file-secured.tls: "true"
          traefik.http.routers.file-secured.tls.options: "securetls@file"
          traefik.http.routers.file-secured.tls.certresolver: "le"
          traefik.http.routers.file-secured.middlewares: "secureHeaders@file,googleAuth@file"
          traefik.http.services.file-secured.loadbalancer.server.port: "7000"
        restart: always
        command: /filebrowser
#    mariadb:
#       image: mariadb:latest
#       container_name: mariadb
#        environment:
#          PUID: "${PUID}"
#          PGID: "${PGID}"
#          MYSQL_ROOT_PASSWORD: "${MYSQL_PASSWORD}"
#        volumes:
#          - /etc/localtime:/etc/localtime:ro
#          - "${APPDATA_WEB}/wordpress/mdb:/var/lib/mysql"
#        restart: always
#    wordpress:
#        image: wordpress:latest
#        container_name: wordpress
#        environment:
#          PUID: "${PUID}"
#          PGID: "${PGID}"
#          WORDPRESS_DB_PASSWORD: "${MYSQL_PASSWORD}"
#          WORDPRESS_DB_HOST: mariadb:3306
#        volumes:
#          - /etc/localtime:/etc/localtime:ro
#          - "${APPDATA_WEB}/wordpress:/var/www/html"
#       labels:
#         traefik.enable: "true"
#         traefik.http.routers.wordpress.rule: "Host(`${DOMAIN}`)"
#         traefik.http.routers.wordpress.entrypoints: "web"
#         traefik.http.routers.wordpress.middlewares: "redirect@file"
#         traefik.http.routers.wordpress-secured.rule: "Host(`${DOMAIN}`)"
#         traefik.http.routers.wordpress-secured.entrypoints: "websecure"
#         traefik.http.routers.wordpress-secured.tls: "true"
#         traefik.http.routers.wordpress-secured.tls.options: "securetls@file"
#         traefik.http.routers.wordpress-secured.tls.certresolver: "le"
#         traefik.http.routers.wordpress-secured.middlewares: "secureHeaders@file,googleAuth@file"
#         traefik.http.services.wordpress-secured.loadbalancer.server.port: "80"
#       restart: always
#   netdata:
#       image: netdata/netdata:latest
#       container_name: netdata
#       cap_add:
#         - SYS_PTRACE
#       environment:
#         PUID: "${PUID}"
#         PGID: "${PGID}"
#       volumes:
#         - /etc/localtime:/etc/localtime:ro
#         - /var/run/docker.sock:/var/run/docker.sock
#         - /proc:/host/proc
#         - /sys:/host/sys
#       labels:
#         traefik.enable: "true"
#         traefik.http.routers.netdata.rule: "Host(`netdata.${DOMAIN}`)"
#         traefik.http.routers.netdata.entrypoints: "web"
#         traefik.http.routers.netdata.middlewares: "redirect@file"
#         traefik.http.routers.netdata-secured.rule: "Host(`netdata.${DOMAIN}`)"
#         traefik.http.routers.netdata-secured.entrypoints: "websecure"
#         traefik.http.routers.netdata-secured.tls: "true"
#         traefik.http.routers.netdata-secured.tls.options: "securetls@file"
#         traefik.http.routers.netdata-secured.tls.certresolver: "le"
#         traefik.http.routers.netdata-secured.middlewares: "secureHeaders@file,googleAuth@file"
#         traefik.http.services.netdata-secured.loadbalancer.server.port: "19999"
#       restart: always
#    hiemdall:
#        image: linuxserver/heimdall:latest
#        container_name: heimdall
#        environment:
#          PUID: "${PUID}"
#          PGID: "${PGID}"
#        volumes:
#          - /etc/localtime:/etc/localtime:ro
#          - "${APPDATA_WEB}/heimdall:/config"
#        labels:
#          traefik.enable: "true"
#          traefik.http.routers.heimdall.rule: "Host(`admin.${DOMAIN}`)"
#          traefik.http.routers.heimdall.entrypoints: "web"
#          traefik.http.routers.heimdall.middlewares: "redirect@file"
#          traefik.http.routers.heimdall-secured.rule: "Host(`admin.${DOMAIN}`)"
#          traefik.http.routers.heimdall-secured.entrypoints: "websecure"
#          traefik.http.routers.heimdall-secured.tls: "true"
#          traefik.http.routers.heimdall-secured.tls.options: "securetls@file"
#          traefik.http.routers.heimdall-secured.tls.certresolver: "le"
#          traefik.http.routers.heimdall-secured.middlewares: "secureHeaders@file,googleAuth@file"
#          traefik.http.services.heimdall-secured.loadbalancer.server.port: "80"
#        restart: always
networks:
  default:
    external:
      name: web
